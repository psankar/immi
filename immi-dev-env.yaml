apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: immi
  labels:
    app: postgres
type: Opaque
data:
  POSTGRES_DB: aW1taQ==
  POSTGRES_USER: aW1taQ==
  POSTGRES_PASSWORD: cGFzc3dvcmQ=
  POSTGRES_HOST: cG9zdGdyZXM=
  POSTGRES_PORT: NTQzMg==
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  namespace: immi
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/data/postgresql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: immi
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: immi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: localhost:5001/postgres:14.6
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PORT
            - name: POSTGRES_INITDB_ARGS
              value: "-A md5"
          resources:
            requests:
              cpu: "1"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: immi
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: immi
  namespace: immi
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /accounts(/|$)(.*)
            backend:
              service:
                name: accounts
                port:
                  number: 8080
          - pathType: Prefix
            path: /funnel(/|$)(.*)
            backend:
              service:
                name: funnel
                port:
                  number: 8080
          - pathType: Prefix
            path: /listys(/|$)(.*)
            backend:
              service:
                name: listys
                port:
                  number: 8080
